# SPDX-FileCopyrightText: Â© 2024 Technical University of Crete
# SPDX-License-Identifier: MIT

CMAKE_MINIMUM_REQUIRED(VERSION 3.14)
SET(CMAKE_CXX_STANDARD 17)            

# ----------------------------------------------------------------------------------
# Give a name to the project (DO NOT CHANGE IT, this is autogenerated)
# ----------------------------------------------------------------------------------
PROJECT(lambda_sample)

# ----------------------------------------------------------------------------------
# Set executable name (DO NOT CHANGE IT, this is autogenerated)
# ----------------------------------------------------------------------------------
SET(EXECUTABLE_NAME executable)

# ----------------------------------------------------------------------------------
# If you want to add more source files, add them here
# ----------------------------------------------------------------------------------
SET(
  SRCS 
  main.cpp 
  lambda_function.cpp
)

# ----------------------------------------------------------------------------------
# TODO: USE THIS SECTION TO INCLUDE EXTERNAL LIBS
# ----------------------------------------------------------------------------------

# Include FetchContent to download repositories
INCLUDE(FetchContent)

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Download nlohmann/json and make it available
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
FetchContent_Declare(
  json
  GIT_REPOSITORY https://github.com/nlohmann/json.git
  GIT_TAG v3.10.5
)
FetchContent_MakeAvailable(json)

# -------------------------------------------------------------------------------
# Create executable
# -------------------------------------------------------------------------------

ADD_EXECUTABLE(${EXECUTABLE_NAME} ${SRCS})

# -------------------------------------------------------------------------------
# TODO: LINK external libs to the project
# -------------------------------------------------------------------------------

# Link nlohmann_json to the project
target_link_libraries(
  ${EXECUTABLE_NAME} 
  PRIVATE 
  nlohmann_json::nlohmann_json
)